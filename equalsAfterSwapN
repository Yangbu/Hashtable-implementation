// check if 2 strings equals aftering swaping n times

import java.io.*;
import java.util.*;

class MyCode {
  public static void main (String[] args) {
    System.out.println(equalsAfterSwapN("abcd","dcba"));
  }
  
  public static boolean equalsAfterSwapN(String s1, String s2) {
    if (s1 == null || s2 == null || s1.equals(s2))
      return false;
    Map<Character, Set<Integer>> map = new HashMap<>();
    for (int i = 0; i < s1.length(); i++) {
      char c = s2.charAt(i);
      if (s1.charAt(i) != c) {
        if (!map.containsKey(c))
          map.put(c, new HashSet<>());
        map.get(c).add(i);
      }
    }
    return dfs(s1.toCharArray(), s2.toCharArray(), map);
  }
  
  public static boolean dfs(char[] s1, char[] s2, Map<Character, Set<Integer>> map) {
    for (int i = 0; i < s1.length; i++) {
      if (s1[i] != s2[i]) {
        if (map.containsKey(s1[i])) {
          for (int j : map.get(s1[i])) {
            if (j > i && s1[j] == s2[i]) {
              swap(s2, i, j);
              map.get(s1[i]).remove(j);
              if (dfs(s1, s2, map))
                return true;
              swap(s2, i, j);
              map.get(s1[i]).add(j);
            }
          }
        }
        return false;
      }
    }
    return true;
  }
  
  public static void swap(char[] s, int i, int j) {
    char c = s[i];
    s[i] = s[j];
    s[j] = c;
  }
}
